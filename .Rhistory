ggplot(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
geom_point(mapping = aes(color = species, sphape = species)) +
geom_smooth(method = "lm")
ggplot(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
geom_point(mapping = aes(color = species, sphape = species)) +
geom_smooth(method = "lm")
ggplot(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
geom_point(mapping = aes(color = species, sphape = species)) +
geom_smooth(method = "lm")
ggplot(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
geom_point(mapping = aes(color = species, shape = species)) +
geom_smooth(method = "lm")
ggplot(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
geom_point(mapping = aes( shape = species)) +
geom_smooth(method = "lm")
ggplot(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
geom_point() +
geom_smooth(method = "lm")
ggplot(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
geom_point() +
ggplot(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
geom_point()
ggplot(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
geom_point()
color = species,
ggplot(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
geom_point(mapping = aes(color = species, shape = species)) +
geom_smooth(method = "lm")
ggplot(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
geom_point(aes(color = species, shape = species)) +
geom_smooth(method = "lm") +
labs(
title = "Body mass and flipper length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Flipper length (mm)", y = "Body mass (g)",
color = "Species", shape = "Species"
)
ggplot(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
geom_point(aes(color = bill_depth_mm)) +
geom_smooth(method = "lm") +
labs(
title = "Body mass and flipper length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Flipper length (mm)", y = "Body mass (g)",
color = "bill_depth_mm"
)
ggplot(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
geom_point(aes(color = bill_depth_mm)) +
labs(
title = "Body mass and flipper length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Flipper length (mm)", y = "Body mass (g)",
color = "bill_depth_mm"
)
ggplot(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
geom_point(aes(color = bill_depth_mm)) +
geom_smooth(method = "lm") +
labs(
title = "Body mass and flipper length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Flipper length (mm)", y = "Body mass (g)",
color = "bill_depth_mm"
)
geom_smooth(method = "lm")
ggplot(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g, color = island)
) +
geom_point() +
geom_smooth(se = FALSE)
ggplot(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
geom_point(aes(color = bill_depth_mm)) +
geom_smooth(se = FALSE) +
labs(
title = "Body mass and flipper length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Flipper length (mm)", y = "Body mass (g)",
color = "bill_depth_mm"
)
ggplot(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
geom_point(aes(color = bill_depth_mm)) +
geom_smooth(se = FALSE, method = "lm") +
labs(
title = "Body mass and flipper length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Flipper length (mm)", y = "Body mass (g)",
color = "bill_depth_mm"
)
ggplot(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
geom_point() +
geom_smooth()
ggplot(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
geom_point(aes(color = bill_depth_mm)) +
geom_smooth() +
labs(
title = "Body mass and flipper length",
subtitle = "Dimensions for Adelie, Chinstrap, and Gentoo Penguins",
x = "Flipper length (mm)", y = "Body mass (g)",
color = "bill_depth_mm"
)
ggplot(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
geom_point() +
geom_smooth()
ggplot() +
geom_point(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
) +
geom_smooth(
data = penguins,
mapping = aes(x = flipper_length_mm, y = body_mass_g)
)
penguins |>
ggplot(aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point()
ggplot(penguins, aes(x = species)) +
geom_bar()
ggplot(penguins, aes(x = fct_infreq(species))) +
geom_bar()
ggplot(penguins, aes(x = body_mass_g)) +
geom_bar()
ggplot(penguins, aes(x = body_mass_g)) +
geom_histogram(binwidth = 200)
ggplot(penguins, aes(x = body_mass_g)) +
geom_histogram(binwidth = 500)
ggplot(penguins, aes(x = body_mass_g)) +
geom_density()
ggplot(penguins, aes(x = species)) +
geom_bar(color = "red")
ggplot(penguins, aes(x = body_mass_g)) +
geom_density()
ggplot(penguins, aes(x = body_mass_g, color = species)) +
geom_density()
ggplot(penguins, aes(x = body_mass_g, color = species)) +
geom_density(linewidth = 0.75)
ggplot(penguins, aes(x = body_mass_g, color = species, fill = islands)) +
geom_density(linewidth = 0.75)
ggplot(penguins, aes(x = body_mass_g, color = species, fill = island)) +
geom_density(linewidth = 0.75)
ggplot(penguins, aes(x = body_mass_g, color = species, fill = island)) +
geom_density(linewidth = 0.75, alpha = 0.5)
ggplot(penguins, aes(x = body_mass_g, color = species, fill = species))+
geom_density(linewidth = 0.75, alpha = 0.5)
ggplot(penguins, aes(x = island, fill = species)) +
geom_bar()
ggplot(penguins, aes(x = island, fill = species)) +
geom_bar(position = "fill")
ggplot(penguins, aes(x = flipper_length_mm, y = body_mass_g)) +
geom_point(aes(color = species, shape = species)) +
facet_wrap(~island)
ggsave(filename = "penguin-plot.png")
ls
list.files()
ls()
libary(todyverse)
install.packages(todyverse)
install.packages('todyverse')
library(nycflights13)
nycflights13::flights
flights <- nycflights13::flights
library(shiny); runApp('R_Programming/Co-experession/coexpression_plotly.R')
runApp('R_Programming/Co-experession/Coexpression_heatmap.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply.R')
runApp('R_Programming/Co-experession/coexpression_tab.R')
runApp('R_Programming/Co-experession/Coexpression_clustering.R')
runApp('R_Programming/Co-experession/Coexpression_heatmap.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_clustering.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmap.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmap.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/Coexpression_heatmaply_homepage.R')
runApp('R_Programming/Co-experession/coexpression_user.R')
runApp('R_Programming/Co-experession/coexpression_user.R')
runApp('Shinny_website/coexpression_user.R')
runApp('Shinny_website/coexpression_user.R')
library(shiny); runApp('Shinny_website/coexpression_user.R')
runApp('R_Programming/Co-experession/Coexpression_clustering.R')
runApp('R_Programming/Co-experession/plotly/Coexpression_plotly.R')
runApp('R_Programming/Co-experession/plotly/Coexpression_plotly.R')
runApp('R_Programming/Co-experession/complex_heatmap/coexpression_complex_heatmap.R')
install.packages("ComplexHeatmap")
install.packages("BiocManager")
BiocManager::install("ComplexHeatmap")
BiocManager::install("InteractiveComplexHeatmap")
runApp('R_Programming/Co-experession/complex_heatmap/coexpression_complex_heatmap.R')
runApp('R_Programming/Co-experession/complex_heatmap/coexpression_complex_heatmap.R')
runApp('R_Programming/Co-experession/complex_heatmap/coexpression_complex_heatmap.R')
runApp('R_Programming/Co-experession/complex_heatmap/coexpression_complex_heatmap.R')
runApp('R_Programming/Co-experession/complex_heatmap/coexpression_complex_heatmap.R')
if (!requireNamespace("devtools", quietly = TRUE))
install.packages("devtools")
devtools::install_github("jokergoo/InteractiveComplexHeatmap")
runApp('R_Programming/Co-experession/complex_heatmap/coexpression_complex_heatmap.R')
if (!requireNamespace("devtools", quietly = TRUE))
install.packages("devtools")
devtools::install_github("jokergoo/ComplexHeatmap")
runApp('R_Programming/Co-experession/complex_heatmap/coexpression_complex_heatmap.R')
runApp('R_Programming/Co-experession/complex_heatmap/coexpression_complex_heatmap.R')
library(shiny); runApp('Shinny_website/coexpression_user.R')
runApp('Shinny_website/coexpression_user.R')
runApp('R_Programming/Co-experession/complex_heatmap/Coexpression_interactive_complex.R')
runApp('Shinny_website/coexpression_user.R')
runApp('R_Programming/Co-experession/complex_heatmap/Coexpression_interactive_complex.R')
SRP286427 <- readRDS("C:/Users/vamsi/AppData/Local/Temp/2840444c-9e47-4f75-bc29-e5d806c2f0a0_SRP286427.rds.gz.SRP286427.rds.gz/SRP286427.rds")
library(shiny); runApp('R_Programming/Co-experession/complex_heatmap/Coexpression_interactive_complex.R')
library(shiny); runApp('R_Programming/Co-experession/complex_heatmap/Coexpression_interactive_complex.R')
runApp('R_Programming/Co-experession/complex_heatmap/Coexpression_interactive_complex.R')
runApp('R_Programming/Co-experession/complex_heatmap/Coexpression_interactive_complex.R')
runApp('R_Programming/Co-experession/complex_heatmap/Coexpression_interactive_complex.R')
runApp('R_Programming/Co-experession/complex_heatmap/Coexpression_interactive_complex.R')
install.packages(c("promises", "future"))
library(shiny); runApp('R_Programming/Co-experession/complex_heatmap/Coexpression_interactive_complex.R')
runApp('R_Programming/Co-experession/complex_heatmap/Coexpression_interactive_complex.R')
runApp('R_Programming/Co-experession/complex_heatmap/Coexpression_interactive_complex.R')
runApp('R_Programming/Co-experession/complex_heatmap/Coexpression_interactive_complex.R')
runApp('R_Programming/Co-experession/complex_heatmap/Coexpression_interactive_complex.R')
runApp('R_Programming/Co-experession/complex_heatmap/coexpression_backup.R')
runApp('R_Programming/Co-experession/complex_heatmap/coexpression_backup.R')
library(shiny); runApp('R_Programming/Co-experession/complex_heatmap/Coexpression_interactive_complex_noclustering.R')
load("~/R_Programming/Co-experession/complex_heatmap/.RData")
load("~/R_Programming/Co-experession/complex_heatmap/.RData")
gc()
gc()
View(gene_spearman_cor)
gc()
library(shiny); runApp('R_Programming/Co-experession/complex_heatmap/Coexpression_interactive_complex_noclustering.R')
runApp('R_Programming/Co-experession/complex_heatmap/Coexpression_interactive_complex_noclustering.R')
shiny::runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
rsconnect::applications()
rsconnect::removeApplication(appId = 14386011)
rsconnect::terminateApp(appId = 14386011)
rsconnect::terminateApp("Co-experession")
rsconnect::terminateApp("Shinny_website")
rsconnect::applications()
rsconnect::purgeApp(appID = "14026570")
rsconnect::purgeApp("14026570")
rsconnect::purgeApp(14026570)
rsconnect::purgeApp("Shinny_website")
rsconnect::purgeApp("Co-experession")
rsconnect::purgeApp("Co-experession_plotly")
rlang::last_trace()
rlang::last_trace(drop = FALSE)
rsconnect::purgeApp("shiny_dashboard_1")
runApp('shiny_dashboard_1.0')
rsconnect::applications()
rsconnect::restartApp("shiny_dashboard_1")
rsconnect::purgeApp("shiny_dashboard_1")
rsconnect::applications()
rsconnect::terminateApp("shiny_dashboard_1")
rsconnect::purgeApp("shiny_dashboard_1")
runApp('shiny_dashboard_1.0')
shiny::runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
getwd()
matrix_data <- readRDS("C:/Users/vamsi/OneDrive/Documents/shiny_dashboard_1.0/cor_ordered_all.rds")
matrix_data <- readRDS("C:/Users/vamsi/OneDrive/Documents/shiny_dashboard_1.0/data/cor_ordered_all.rds")
# Extract first row
first_row <- matrix_data[1, ]
# Extract first column
first_column <- matrix_data[, 1]
# Print the results
print(first_row)
print(first_column)
source("~/R_Programming/Co-experession/complex_heatmap/csv_rds.R")
matrix_data <- readRDS("C:/Users/vamsi/OneDrive/Documents/shiny_dashboard_1.0/data/cor_ordered_all.rds")
>
first_row <- matrix_data[1, ]
first_column <- matrix_data[, 1]
print(first_column)
source("~/R_Programming/Co-experession/complex_heatmap/csv_rds.R")
runApp('shiny_dashboard_1.0')
matrix_data <- readRDS("C:/Users/vamsi/OneDrive/Documents/shiny_dashboard_1.0/data/cor_ordered_all.rds")
# Extract first row
first_row <- matrix_data[1, ]
# Extract first column
first_column <- matrix_data[, 1]
# Print the results
print(first_row)
print(first_column)
source("~/R_Programming/Co-experession/complex_heatmap/csv_rds.R")
runApp('shiny_dashboard_1.0')
source("~/R_Programming/Co-experession/complex_heatmap/csv_rds.R")
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
observe({
print(names(input)) # Should show "heatmap_output_hover"
})
shiny::runApp('shiny_dashboard_1.0')
package.install('magick')
install.packages('magick')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
package_version('InteractiveComplexHeatmap')
runApp('shiny_dashboard_1.0')
packageVersion("InteractiveComplexHeatmap")
heatmap_obj <- reactive({
req(data())
Heatmap(
data(),
name = "Correlation",
col = colorRamp2(c(-1, 0, 1), c("blue", "white", "red")),
show_row_names = FALSE,
show_column_names = FALSE,
use_raster = TRUE
)
})
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
packageVersion("InteractiveComplexHeatmap")
runApp('shiny_dashboard_1.0')
shiny::runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('C:/Users/vamsi/OneDrive/Desktop/gene_co-expression_tool')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
shiny::runApp('shiny_dashboard_1.0')
runApp()
runApp('shiny_dashboard_1.0')
shiny::runApp('shiny_dashboard_1.0')
system("ascp -h")
system("curl --version")
getwd()
source("C:/Users/vamsi/OneDrive/Desktop/scGeneAnalysis/30-gene_co_expression.r")
R --version
version
Rscript --version
install.packages('Rscript')
class(data)
data <- readRDS("S1_leaf_rename.slim.RDS")
getwd
getwd()
data <- readRDS("S1_leaf_rename.slim.RDS")
class(data)
shiny::runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0 - backup')
getwd()
source("~/R_Programming/Co-experession/complex_heatmap/csv_rds.R")
shiny::runApp('shiny_dashboard_1.0')
getwd()
rsconnect::deployApp(appDir = "C:/Users/vamsi/OneDrive/Documents/shiny_dashboard_1.0", logLevel = "verbose")
source("~/shiny_dashboard_1.0/demo.R")
library(shiny); runApp('shiny_dashboard_1.0/demo.R')
library(shiny); runApp('shiny_dashboard_1.0/demo.R')
runApp('shiny_dashboard_1.0/demo.R')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
shiny::runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0/demo.R')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0/demo.R')
runApp('shiny_dashboard_1.0')
shiny::runApp('shiny_dashboard_1.0')
shiny::runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
runApp('shiny_dashboard_1.0')
shiny::runApp('shiny_dashboard_2.0')
runApp('shiny_dashboard_2.0')
runApp('shiny_dashboard_2.0')
runApp('shiny_dashboard_2.0')
runApp('shiny_dashboard_2.0')
runApp('shiny_dashboard_2.0')
runApp('shiny_dashboard_2.0')
shiny::runApp('shiny_dashboard_2.0')
runApp('shiny_dashboard_2.0')
runApp('shiny_dashboard_2.0')
runApp('shiny_dashboard_2.0')
runApp('shiny_dashboard_2.0')
shiny::runApp('shiny_dashboard_2.0')
runApp('shiny_dashboard_2.0')
runApp('shiny_dashboard_2.0')
shiny::runApp('shiny_dashboard_2.0')
shiny::runApp('shiny_dashboard_2.0')
getwd()
setwd("C:/Users/vamsi/OneDrive/Documents/shiny_dashboard_2.0")
getwd()
source("~/shiny_dashboard_2.0/merge_gene-names.R")
source("~/shiny_dashboard_2.0/merge_gene-names.R")
source("~/shiny_dashboard_2.0/merge_gene-names.R")
source("~/shiny_dashboard_2.0/merge_gene-names.R")
source("~/shiny_dashboard_2.0/merge_gene-names.R")
source("~/shiny_dashboard_2.0/merge_gene-names.R")
source("~/shiny_dashboard_2.0/merge_gene-names.R")
runApp()
runApp()
rsconnect::showLogs()
getOption("rsconnect.http.verbose")
options(rsconnect.http.trace = TRUE)
options(rsconnect.http.verbose = TRUE)
getOption("rsconnect.http.verbose")
rsconnect::deployApp()
httr::set_config(httr::config(connecttimeout = 300))
getOption("rsconnect.http.verbose")
rsconnect::deployApp()
httr::set_config(httr::config(connecttimeout = 900))
rsconnect::deployApp()
httr::set_config(httr::config(connecttimeout = 2100))
rsconnect::deployApp()
rsconnect::deployApp()
httr::set_config(httr::config(connecttimeout = 900))
rsconnect::deployApp()
